import gmpy2
from hashlib import sha256
'''
for a in range(9):
    for b in range(0,3):
        for c in range(0,3):
            for d in range(0,1):
                for e in range(0,1):
                    for f in range(0,1):
                        if(a**2+b**4+c**6+d**8+e**10+f**12==64):
                            print (a,b,c,d,e,f)
'''
# c=2
# v is prime
# y is prime
# (u,u+1,v) is a Twin Pythagorean Triple
# since u~2^666, the r in the solution is about 261 using logs
# Pell's equation solution : expand( ((sqrt(2)+1)^(2*r+1)-(sqrt(2)-1)^(2*r+1))/4 + (-1)^r/2) at r=261
u=38870796548368940451592529482185869982938448205812640195914560739542103841403178847163517462769143179065031576973812014377488506777895445800461891869308645201761858965032907136032847098509289762520539
v=54971607658948646301386783144964782698772613513307493180078896702918825851648683235325858118170150873214978343601463118106546653220435805362395962991295556488036606954237309847762149971207793263738989
# (x+1,x,y) is some parametrizable hyperbola
# expand(((-3-2*sqrt(3))*(7-4*sqrt(3))^r+(-3+2*sqrt(3))*(7+4*sqrt(3))^r-6)/12)
x=2929219721139577720733862051859801690342725739320715630102152440665051724895027651815801589822478988305846846083549661332897318938724576681923803796059612952236038798314710140134264
y=5073557383546487137945410473466556718830129339025213837451156233563658135296353459994544781708539660966095175852902937975236171859961262538393568510313468641105066779787434237464141

assert ((u+1)**2 + u**2 - v**2)**2 + ((x+1)**3 - x**3 - y**2)**4 + (gmpy2.is_prime(v) + 1)**6 + (gmpy2.is_prime(y) - 1)**8 + (len(bin(u)[2:]) - 664)**10 + (len(bin(x)[2:]) - 600)**12 == 664 - 600

flag = 'CCTF{' + sha256(str(u) + str(v) + str(x) + str(y)).hexdigest() + '}'
print flag

